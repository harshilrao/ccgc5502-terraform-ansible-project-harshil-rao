---
- name: Ensure group 'cloudadmins' exists
  group:
    name: cloudadmins
    state: present

- name: Ensure group 'wheel' exists (best-effort)
  group:
    name: wheel
    state: present

- name: Create 3 users and add to groups + generate SSH keys
  user:
    name: "{{ item }}"
    groups: "cloudadmins,wheel"
    append: yes
    shell: /bin/bash
    create_home: yes
    generate_ssh_key: yes
    ssh_key_type: rsa
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa
    ssh_key_comment: "generated by Ansible"
    ssh_key_passphrase: ""
  loop:
    - user100
    - user200
    - user300

# Ensure ~/.ssh perms are correct for each user
- name: Ensure ~/.ssh directory perms
  file:
    path: "/home/{{ item }}/.ssh"
    state: directory
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: "0700"
  loop:
    - user100
    - user200
    - user300

# Read each user's generated public key
- name: Read public key content
  command: cat /home/{{ item }}/.ssh/id_rsa.pub
  register: user_pubkeys
  changed_when: false
  loop:
    - user100
    - user200
    - user300

# Install public key into authorized_keys
- name: Ensure authorized_keys contains the public key
  authorized_key:
    user: "{{ item.item }}"
    key: "{{ item.stdout }}"
    state: present
    manage_dir: false
  loop: "{{ user_pubkeys.results }}"

# Ensure authorized_keys perms are correct
- name: Fix authorized_keys perms
  file:
    path: "/home/{{ item }}/.ssh/authorized_keys"
    state: file
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: "0600"
  loop:
    - user100
    - user200
    - user300

# Download private key for user100 from VM1 to control machine (for rubric)
- name: Download private key for user100 from VM1 to control machine
  fetch:
    src: /home/user100/.ssh/id_rsa
    dest: "{{ playbook_dir }}/downloads/user100_id_rsa"
    flat: yes
  when: inventory_hostname == (groups['linux'][0])
